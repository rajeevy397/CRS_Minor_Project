{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajeev\\\\Desktop\\\\CRS\\\\client\\\\src\\\\pages\\\\PredictionPage\\\\Prediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from '../../components/Navbar/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Prediction = () => {\n  _s();\n  const [inputs, setInputs] = useState({\n    N: '',\n    P: '',\n    K: '',\n    temperature: '',\n    humidity: '',\n    ph: '',\n    rainfall: ''\n  });\n  const [prediction, setPrediction] = useState(null);\n  const handleChange = event => {\n    setInputs({\n      ...inputs,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(inputs)\n      });\n      const data = await response.json();\n      setPrediction(data.prediction);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"N: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"N\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"P: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"P\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"K: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"K\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"temperature\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"humidity\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"pH: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"ph\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rainfall: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"rainfall\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Predict\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), prediction && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Prediction: \", prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Prediction, \"T6Fi5iWK0mamlInJj79wWlLVjUQ=\");\n_c = Prediction;\nexport default Prediction;\nvar _c;\n$RefreshReg$(_c, \"Prediction\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Prediction","_s","inputs","setInputs","N","P","K","temperature","humidity","ph","rainfall","prediction","setPrediction","handleChange","event","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Rajeev/Desktop/CRS/client/src/pages/PredictionPage/Prediction.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nconst Prediction = () => {\r\n  const [inputs, setInputs] = useState({\r\n    N: '',\r\n    P: '',\r\n    K: '',\r\n    temperature: '',\r\n    humidity: '',\r\n    ph: '',\r\n    rainfall: '',\r\n  });\r\n  const [prediction, setPrediction] = useState(null);\r\n\r\n  const handleChange = (event) => {\r\n    setInputs({ ...inputs, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:5000/predict', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(inputs),\r\n      });\r\n      const data = await response.json();\r\n      setPrediction(data.prediction);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Navbar/>\r\n    <form onSubmit={handleSubmit}>\r\n      <p>\r\n        N: <input type=\"text\" name=\"N\" onChange={handleChange} />\r\n      </p>\r\n      <p>\r\n        P: <input type=\"text\" name=\"P\" onChange={handleChange} />\r\n      </p>\r\n      <p>\r\n        K: <input type=\"text\" name=\"K\" onChange={handleChange} />\r\n      </p>\r\n      <p>\r\n        Temperature:{' '}\r\n        <input type=\"text\" name=\"temperature\" onChange={handleChange} />\r\n      </p>\r\n      <p>\r\n        Humidity: <input type=\"text\" name=\"humidity\" onChange={handleChange} />\r\n      </p>\r\n      <p>\r\n        pH: <input type=\"text\" name=\"ph\" onChange={handleChange} />\r\n      </p>\r\n      <p>\r\n        Rainfall: <input type=\"text\" name=\"rainfall\" onChange={handleChange} />\r\n      </p>\r\n      <p>\r\n        <button type=\"submit\">Predict</button>\r\n      </p>\r\n      {prediction && <p>Prediction: {prediction}</p>}\r\n    </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Prediction;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}